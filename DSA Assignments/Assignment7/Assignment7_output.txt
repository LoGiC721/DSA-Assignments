//Output :


WELCOME TO THE COLLEGE NAVIGATION APPLICATION !!!

Enter your choice(0 to 3) : 
1. Create map by inserting locations.
2. Find the minimum distance uisng Prim's Algorithm.
3. Find the minimum distance uisng Kruskal's Algorithm.

Enter 0 to end the application.
1

Map Creation : 

Enter number of spots : 6

Enter number of paths : 10

Enter the details of spots : 

Enter the name of spot : IT
Enter the number of spot : 0

Enter the name of spot : CS
Enter the number of spot : 1

Enter the name of spot : ENTC
Enter the number of spot : 2

Enter the name of spot : Sport
Enter the number of spot : 3

Enter the name of spot : Labs
Enter the number of spot : 4

Enter the name of spot : Gate
Enter the number of spot : 5

Enter the details of paths : 
Enter starting spot number,ending spot number and path distance between them : 0 1 5
Enter starting spot number,ending spot number and path distance between them : 0 2 4
Enter starting spot number,ending spot number and path distance between them : 0 3 6
Enter starting spot number,ending spot number and path distance between them : 0 4 2
Enter starting spot number,ending spot number and path distance between them : 1 3 2
Enter starting spot number,ending spot number and path distance between them : 1 5 3
Enter starting spot number,ending spot number and path distance between them : 2 4 3
Enter starting spot number,ending spot number and path distance between them : 3 4 1
Enter starting spot number,ending spot number and path distance between them : 3 5 2
Enter starting spot number,ending spot number and path distance between them : 4 5 4

Matrix of distances is as follows :

		IT	CS	ENTC	Sport	Labs	Gate	

	IT	0	5	4	6	2	0	
	CS	5	0	0	2	0	3	
	ENTC	4	0	0	0	3	0	
	Sport	6	2	0	0	1	2	
	Labs	2	0	3	1	0	4	
	Gate	0	3	0	2	4	0	

The map has been created successfully.


-------------------------------------------------------------------------------------------------------------------------------



Enter your choice(0 to 3) : 
1. Create map by inserting locations.
2. Find the minimum distance uisng Prim's Algorithm.
3. Find the minimum distance uisng Kruskal's Algorithm.

Enter 0 to end the application.
2

Prim's Algorithm :


The visited distance and path status is : 

For spot : IT;  Visited : 1;  Path : 0;  Distance : 0
For spot : CS;  Visited : 0;  Path : 0;  Distance : 5000
For spot : ENTC;  Visited : 0;  Path : 0;  Distance : 5000
For spot : Sport;  Visited : 0;  Path : 0;  Distance : 5000
For spot : Labs;  Visited : 0;  Path : 0;  Distance : 5000
For spot : Gate;  Visited : 0;  Path : 0;  Distance : 5000
Total visited : 1

The visited distance and path status is : 

For spot : IT;  Visited : 1;  Path : 0;  Distance : 0
For spot : CS;  Visited : 0;  Path : 0;  Distance : 5
For spot : ENTC;  Visited : 0;  Path : 0;  Distance : 4
For spot : Sport;  Visited : 0;  Path : 0;  Distance : 6
For spot : Labs;  Visited : 0;  Path : 0;  Distance : 2
For spot : Gate;  Visited : 0;  Path : 0;  Distance : 5000

Finding minimum distance : 
For Edge number : 6;   Minimum distance : 2;   Current edge : 4
Current edge : 4
Total Visited : 2
Total visited : 2

The visited distance and path status is : 

For spot : IT;  Visited : 1;  Path : 0;  Distance : 0
For spot : CS;  Visited : 0;  Path : 0;  Distance : 5
For spot : ENTC;  Visited : 0;  Path : 4;  Distance : 3
For spot : Sport;  Visited : 0;  Path : 4;  Distance : 1
For spot : Labs;  Visited : 1;  Path : 0;  Distance : 2
For spot : Gate;  Visited : 0;  Path : 4;  Distance : 4

Finding minimum distance : 
For Edge number : 6;   Minimum distance : 1;   Current edge : 3
Current edge : 3
Total Visited : 3
Total visited : 3

The visited distance and path status is : 

For spot : IT;  Visited : 1;  Path : 0;  Distance : 0
For spot : CS;  Visited : 0;  Path : 3;  Distance : 2
For spot : ENTC;  Visited : 0;  Path : 4;  Distance : 3
For spot : Sport;  Visited : 1;  Path : 4;  Distance : 1
For spot : Labs;  Visited : 1;  Path : 0;  Distance : 2
For spot : Gate;  Visited : 0;  Path : 3;  Distance : 2

Finding minimum distance : 
For Edge number : 6;   Minimum distance : 2;   Current edge : 1
Current edge : 1
Total Visited : 4
Total visited : 4

The visited distance and path status is : 

For spot : IT;  Visited : 1;  Path : 0;  Distance : 0
For spot : CS;  Visited : 1;  Path : 3;  Distance : 2
For spot : ENTC;  Visited : 0;  Path : 4;  Distance : 3
For spot : Sport;  Visited : 1;  Path : 4;  Distance : 1
For spot : Labs;  Visited : 1;  Path : 0;  Distance : 2
For spot : Gate;  Visited : 0;  Path : 3;  Distance : 2

Finding minimum distance : 
For Edge number : 6;   Minimum distance : 2;   Current edge : 5
Current edge : 5
Total Visited : 5
Total visited : 5

The visited distance and path status is : 

For spot : IT;  Visited : 1;  Path : 0;  Distance : 0
For spot : CS;  Visited : 1;  Path : 3;  Distance : 2
For spot : ENTC;  Visited : 0;  Path : 4;  Distance : 3
For spot : Sport;  Visited : 1;  Path : 4;  Distance : 1
For spot : Labs;  Visited : 1;  Path : 0;  Distance : 2
For spot : Gate;  Visited : 1;  Path : 3;  Distance : 2

Finding minimum distance : 
For Edge number : 6;   Minimum distance : 3;   Current edge : 2
Current edge : 2
Total Visited : 6

Minimum spanning tree is : 
 Edge : IT-->ENTC;   Distance : 2
 Edge : IT-->Sport;   Distance : 3
 Edge : IT-->Labs;   Distance : 1
 Edge : CS-->Sport;   Distance : 2
 Edge : CS-->Gate;   Distance : 2

Minimum distance : 10

After MST visited distance and path status is :
For spot : IT;  Visited : 1;  Path : 0;  Distance : 0
For spot : CS;  Visited : 1;  Path : 3;  Distance : 2
For spot : ENTC;  Visited : 1;  Path : 4;  Distance : 3
For spot : Sport;  Visited : 1;  Path : 4;  Distance : 1
For spot : Labs;  Visited : 1;  Path : 0;  Distance : 2
For spot : Gate;  Visited : 1;  Path : 3;  Distance : 2


-------------------------------------------------------------------------------------------------------------------------------



Enter your choice(0 to 3) : 
1. Create map by inserting locations.
2. Find the minimum distance uisng Prim's Algorithm.
3. Find the minimum distance uisng Kruskal's Algorithm.

Enter 0 to end the application.
3

Kruskal's Algorithm : 


The details you entered in the form of starting spot number,ending spot number and path distance between them are as follows : :
IT, CS, 5
IT, ENTC, 4
IT, Sport, 6
IT, Labs, 2
CS, Sport, 2
CS, Gate, 3
ENTC, Labs, 3
Sport, Labs, 1
Sport, Gate, 2
Labs, Gate, 4

Sorted List of distances :
Sport, Labs, 1
IT, Labs, 2
CS, Sport, 2
Sport, Gate, 2
CS, Gate, 3
ENTC, Labs, 3
IT, ENTC, 4
Labs, Gate, 4
IT, CS, 5
IT, Sport, 6

Path selected : Sport, Labs, 1
Path selected : IT, Labs, 2
Path selected : CS, Sport, 2
Path selected : Sport, Gate, 2
Path Rejected : CS, Gate, 3
Path selected : ENTC, Labs, 3
Path Rejected : IT, ENTC, 4
Path Rejected : Labs, Gate, 4
Path Rejected : IT, CS, 5
Path Rejected : IT, Sport, 6

Kruskal's MST contains following Distances :
Sport, Labs, 1
IT, Labs, 2
CS, Sport, 2
Sport, Gate, 2
ENTC, Labs, 3

Total Distance of MST is : 10

-------------------------------------------------------------------------------------------------------------------------------



Enter your choice(0 to 3) : 
1. Create map by inserting locations.
2. Find the minimum distance uisng Prim's Algorithm.
3. Find the minimum distance uisng Kruskal's Algorithm.

Enter 0 to end the application.
0

Thank You !
You have ended the appliaction.

-------------------------------------------------------------------------------------------------------------------------------


@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@


//Test Cases :

//Test Case 1 : undirected graph , with no loop, parallel edges.


WELCOME TO THE COLLEGE NAVIGATION APPLICATION !!!

Enter your choice(0 to 3) : 
1. Create map by inserting locations.
2. Find the minimum distance uisng Prim's Algorithm.
3. Find the minimum distance uisng Kruskal's Algorithm.

Enter 0 to end the application.
1

Map Creation : 

Enter number of spots : 3

Enter number of paths : 3

Enter the details of spots : 

Enter the name of spot : IT
Enter the number of spot : 0

Enter the name of spot : CS
Enter the number of spot : 1

Enter the name of spot : EB   NTC
Enter the number of spot : 2

Enter the details of paths : 
Enter starting spot number,ending spot number and path distance between them : 0 1 45
Enter starting spot number,ending spot number and path distance between them : 0 2 3
Enter starting spot number,ending spot number and path distance between them : 1 2 12

Matrix of distances is as follows :

		IT	CS	ENTC	

	IT	0	45	3	
	CS	45	0	12	
	ENTC	3	12	0	

The map has been created successfully.


-------------------------------------------------------------------------------------------------------------------------------



Enter your choice(0 to 3) : 
1. Create map by inserting locations.
2. Find the minimum distance uisng Prim's Algorithm.
3. Find the minimum distance uisng Kruskal's Algorithm.

Enter 0 to end the application.
2

Prim's Algorithm :


The visited distance and path status is : 

For spot : IT;  Visited : 1;  Path : 0;  Distance : 0
For spot : CS;  Visited : 0;  Path : 0;  Distance : 5000
For spot : ENTC;  Visited : 0;  Path : 0;  Distance : 5000
Total visited : 1

The visited distance and path status is : 

For spot : IT;  Visited : 1;  Path : 0;  Distance : 0
For spot : CS;  Visited : 0;  Path : 0;  Distance : 45
For spot : ENTC;  Visited : 0;  Path : 0;  Distance : 3

Finding minimum distance : 
For Edge number : 3;   Minimum distance : 3;   Current edge : 2
Current edge : 2
Total Visited : 2
Total visited : 2

The visited distance and path status is : 

For spot : IT;  Visited : 1;  Path : 0;  Distance : 0
For spot : CS;  Visited : 0;  Path : 2;  Distance : 12
For spot : ENTC;  Visited : 1;  Path : 0;  Distance : 3

Finding minimum distance : 
For Edge number : 3;   Minimum distance : 12;   Current edge : 1
Current edge : 1
Total Visited : 3

Minimum spanning tree is : 
 Edge : IT-->ENTC;   Distance : 12
 Edge : CS-->ENTC;   Distance : 3

Minimum distance : 15

After MST visited distance and path status is :
For spot : IT;  Visited : 1;  Path : 0;  Distance : 0
For spot : CS;  Visited : 1;  Path : 2;  Distance : 12
For spot : ENTC;  Visited : 1;  Path : 0;  Distance : 3


-------------------------------------------------------------------------------------------------------------------------------



Enter your choice(0 to 3) : 
1. Create map by inserting locations.
2. Find the minimum distance uisng Prim's Algorithm.
3. Find the minimum distance uisng Kruskal's Algorithm.

Enter 0 to end the application.
3

Kruskal's Algorithm : 


The details you entered in the form of starting spot number,ending spot number and path distance between them are as follows : :
IT, CS, 45
IT, ENTC, 3
CS, ENTC, 12

Sorted List of distances :
IT, ENTC, 3
CS, ENTC, 12
IT, CS, 45

Path selected : IT, ENTC, 3
Path selected : CS, ENTC, 12

Kruskal's MST contains following Distances :
IT, ENTC, 3
CS, ENTC, 12

Total Distance of MST is : 15

-------------------------------------------------------------------------------------------------------------------------------



Enter your choice(0 to 3) : 
1. Create map by inserting locations.
2. Find the minimum distance uisng Prim's Algorithm.
3. Find the minimum distance uisng Kruskal's Algorithm.

Enter 0 to end the application.
0

Thank You !
You have ended the appliaction.

-------------------------------------------------------------------------------------------------------------------------------


@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@


//Test Case 2 : unconnected graph.


WELCOME TO THE COLLEGE NAVIGATION APPLICATION !!!

Enter your choice(0 to 3) : 
1. Create map by inserting locations.
2. Find the minimum distance uisng Prim's Algorithm.
3. Find the minimum distance uisng Kruskal's Algorithm.

Enter 0 to end the application.
1

Map Creation : 

Enter number of spots : 3

Enter number of paths : 6

Enter the details of spots : 

Enter the name of spot : IT
Enter the number of spot : 0

Enter the name of spot : CS
Enter the number of spot : 1

Enter the name of spot : ENTC
Enter the number of spot : 2

Enter the details of paths : 
Enter starting spot number,ending spot number and path distance between them : 0 1 4
Enter starting spot number,ending spot number and path distance between them : 0 2 45
Enter starting spot number,ending spot number and path distance between them : 1 0 3
Enter starting spot number,ending spot number and path distance between them : 1 2 6
Enter starting spot number,ending spot number and path distance between them : 2 0 19
Enter starting spot number,ending spot number and path distance between them : 2 1 4

Matrix of distances is as follows :

		IT	CS	ENTC	

	IT	0	3	19	
	CS	3	0	4	
	ENTC	19	4	0	

The map has been created successfully.


-------------------------------------------------------------------------------------------------------------------------------



Enter your choice(0 to 3) : 
1. Create map by inserting locations.
2. Find the minimum distance uisng Prim's Algorithm.
3. Find the minimum distance uisng Kruskal's Algorithm.

Enter 0 to end the application.
2

Prim's Algorithm :


The visited distance and path status is : 

For spot : IT;  Visited : 1;  Path : 0;  Distance : 0
For spot : CS;  Visited : 0;  Path : 0;  Distance : 5000
For spot : ENTC;  Visited : 0;  Path : 0;  Distance : 5000
Total visited : 1

The visited distance and path status is : 

For spot : IT;  Visited : 1;  Path : 0;  Distance : 0
For spot : CS;  Visited : 0;  Path : 0;  Distance : 3
For spot : ENTC;  Visited : 0;  Path : 0;  Distance : 19

Finding minimum distance : 
For Edge number : 3;   Minimum distance : 3;   Current edge : 1
Current edge : 1
Total Visited : 2
Total visited : 2

The visited distance and path status is : 

For spot : IT;  Visited : 1;  Path : 0;  Distance : 0
For spot : CS;  Visited : 1;  Path : 0;  Distance : 3
For spot : ENTC;  Visited : 0;  Path : 1;  Distance : 4

Finding minimum distance : 
For Edge number : 3;   Minimum distance : 4;   Current edge : 2
Current edge : 2
Total Visited : 3

Minimum spanning tree is : 
 Edge : IT-->ENTC;   Distance : 3
 Edge : CS-->IT;   Distance : 4

Minimum distance : 7

After MST visited distance and path status is :
For spot : IT;  Visited : 1;  Path : 0;  Distance : 0
For spot : CS;  Visited : 1;  Path : 0;  Distance : 3
For spot : ENTC;  Visited : 1;  Path : 1;  Distance : 4


-------------------------------------------------------------------------------------------------------------------------------



Enter your choice(0 to 3) : 
1. Create map by inserting locations.
2. Find the minimum distance uisng Prim's Algorithm.
3. Find the minimum distance uisng Kruskal's Algorithm.

Enter 0 to end the application.
3

Kruskal's Algorithm : 


The details you entered in the form of starting spot number,ending spot number and path distance between them are as follows : :
IT, CS, 4
IT, ENTC, 45
CS, IT, 3
CS, ENTC, 6
ENTC, IT, 19
ENTC, CS, 4

Sorted List of distances :
CS, IT, 3
IT, CS, 4
ENTC, CS, 4
CS, ENTC, 6
ENTC, IT, 19
IT, ENTC, 45

Path selected : CS, IT, 3
Path Rejected : IT, CS, 4
Path selected : ENTC, CS, 4
Path Rejected : CS, ENTC, 6
Path Rejected : ENTC, IT, 19
Path Rejected : IT, ENTC, 45

Kruskal's MST contains following Distances :
CS, IT, 3
ENTC, CS, 4

Total Distance of MST is : 7

-------------------------------------------------------------------------------------------------------------------------------



Enter your choice(0 to 3) : 
1. Create map by inserting locations.
2. Find the minimum distance uisng Prim's Algorithm.
3. Find the minimum distance uisng Kruskal's Algorithm.

Enter 0 to end the application.
0

Thank You !
You have ended the appliaction.

-------------------------------------------------------------------------------------------------------------------------------