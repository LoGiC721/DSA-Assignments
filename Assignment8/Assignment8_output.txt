//Output :


WELCOME TO THE PUNE CITY NAVIGATION APPLICATION !!!

Enter your choice(0 to 2) : 
1. Create map by inserting locations.
2. Find the shortest distance uisng Dijkstra's Algorithm.

Enter 0 to end the application.
1

Map Creation : 

Enter number of landmarks : 6

Enter number of paths : 10

Enter the details of landmarks : 

Enter the name of landmark : PICT
Enter the number of landmark : 0

Enter the name of landmark : PVG
Enter the number of landmark : 1

Enter the name of landmark : COEP
Enter the number of landmark : 2

Enter the name of landmark : VIT
Enter the number of landmark : 3

Enter the name of landmark : AICT
Enter the number of landmark : 4

Enter the name of landmark : VIIT
Enter the number of landmark : 5

Enter the details of paths : 
Enter source landmark number,destination landmark number and path distance between them : 0 1 5
Enter source landmark number,destination landmark number and path distance between them : 0 2 4
Enter source landmark number,destination landmark number and path distance between them : 0 3 6
Enter source landmark number,destination landmark number and path distance between them : 0 4 2
Enter source landmark number,destination landmark number and path distance between them : 1 3 2
Enter source landmark number,destination landmark number and path distance between them : 1 5 3
Enter source landmark number,destination landmark number and path distance between them : 2 4 3
Enter source landmark number,destination landmark number and path distance between them : 3 4 1
Enter source landmark number,destination landmark number and path distance between them : 3 5 2
Enter source landmark number,destination landmark number and path distance between them : 4 5 4

Matrix of distances is as follows :
		PICT	PVG	COEP	VIT	AICT	VIIT	

	PICT	0	5	4	6	2	0	
	PVG	0	0	0	2	0	3	
	COEP	0	0	0	0	3	0	
	VIT	0	0	0	0	1	2	
	AICT	0	0	0	0	0	4	
	VIIT	0	0	0	0	0	0	

The map has been created successfully.


-------------------------------------------------------------------------------------------------------------------------------



Enter your choice(0 to 2) : 
1. Create map by inserting locations.
2. Find the shortest distance uisng Dijkstra's Algorithm.

Enter 0 to end the application.
2


Dijkstra's Algorithm : 

Enter source landmark name : PICT

Enter source landmark number : 0

The visited distance and path status is : 
For landmark : PICT;  Visited : 1;  Path : 0;  Distance : 0
For landmark : PVG;  Visited : 0;  Path : 0;  Distance : 5
For landmark : COEP;  Visited : 0;  Path : 0;  Distance : 4
For landmark : VIT;  Visited : 0;  Path : 0;  Distance : 6
For landmark : AICT;  Visited : 0;  Path : 0;  Distance : 2
For landmark : VIIT;  Visited : 0;  Path : 0;  Distance : 32767

Selected landmark number is : 4
Minimum is : 2

The visited distance and path status is : 
For landmark : PICT;  Visited : 1;  Path : 0;  Distance : 0
For landmark : PVG;  Visited : 0;  Path : 0;  Distance : 5
For landmark : COEP;  Visited : 0;  Path : 0;  Distance : 4
For landmark : VIT;  Visited : 0;  Path : 0;  Distance : 6
For landmark : AICT;  Visited : 1;  Path : 0;  Distance : 2
For landmark : VIIT;  Visited : 0;  Path : 4;  Distance : 6

Selected landmark number is : 2
Minimum is : 4

The visited distance and path status is : 
For landmark : PICT;  Visited : 1;  Path : 0;  Distance : 0
For landmark : PVG;  Visited : 0;  Path : 0;  Distance : 5
For landmark : COEP;  Visited : 1;  Path : 0;  Distance : 4
For landmark : VIT;  Visited : 0;  Path : 0;  Distance : 6
For landmark : AICT;  Visited : 1;  Path : 0;  Distance : 2
For landmark : VIIT;  Visited : 0;  Path : 4;  Distance : 6

Selected landmark number is : 1
Minimum is : 5

The visited distance and path status is : 
For landmark : PICT;  Visited : 1;  Path : 0;  Distance : 0
For landmark : PVG;  Visited : 1;  Path : 0;  Distance : 5
For landmark : COEP;  Visited : 1;  Path : 0;  Distance : 4
For landmark : VIT;  Visited : 0;  Path : 0;  Distance : 6
For landmark : AICT;  Visited : 1;  Path : 0;  Distance : 2
For landmark : VIIT;  Visited : 0;  Path : 4;  Distance : 6

Selected landmark number is : 3
Minimum is : 6

The visited distance and path status is : 
For landmark : PICT;  Visited : 1;  Path : 0;  Distance : 0
For landmark : PVG;  Visited : 1;  Path : 0;  Distance : 5
For landmark : COEP;  Visited : 1;  Path : 0;  Distance : 4
For landmark : VIT;  Visited : 1;  Path : 0;  Distance : 6
For landmark : AICT;  Visited : 1;  Path : 0;  Distance : 2
For landmark : VIIT;  Visited : 0;  Path : 4;  Distance : 6


The Shortest Path from Source to all destinations in terms of landmark name : 
Source name is : PICT

Destination Landmark name : PVG;   Distance : 5;   Path : PVG <- PICT
Destination Landmark name : COEP;   Distance : 4;   Path : COEP <- PICT
Destination Landmark name : VIT;   Distance : 6;   Path : VIT <- PICT
Destination Landmark name : AICT;   Distance : 2;   Path : AICT <- PICT
Destination Landmark name : VIIT;   Distance : 6;   Path : VIIT <- AICT <- PICT


-------------------------------------------------------------------------------------------------------------------------------



Enter your choice(0 to 2) : 
1. Create map by inserting locations.
2. Find the shortest distance uisng Dijkstra's Algorithm.

Enter 0 to end the application.
0

Thank You !
You have ended the appliaction.

-------------------------------------------------------------------------------------------------------------------------------



@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@


//Test Cases :

//Test Case 1 : directed graph , with no loop, parallel edges.


WELCOME TO THE PUNE CITY NAVIGATION APPLICATION !!!

Enter your choice(0 to 2) : 
1. Create map by inserting locations.
2. Find the shortest distance uisng Dijkstra's Algorithm.

Enter 0 to end the application.
1

Map Creation : 

Enter number of landmarks : 3

Enter number of paths : 6

Enter the details of landmarks : 

Enter the name of landmark : A
Enter the number of landmark : 0

Enter the name of landmark : B
Enter the number of landmark : 1

Enter the name of landmark : C
Enter the number of landmark : 2

Enter the details of paths : 
Enter source landmark number,destination landmark number and path distance between them : 0 1 5
Enter source landmark number,destination landmark number and path distance between them : 0 2 7
Enter source landmark number,destination landmark number and path distance between them : 1 0 45
Enter source landmark number,destination landmark number and path distance between them : 1 2 8
Enter source landmark number,destination landmark number and path distance between them : 2 1 3
Enter source landmark number,destination landmark number and path distance between them : 2 1 6

Matrix of distances is as follows :

		A	B	C	

	A	0	5	7	
	B	45	0	8	
	C	3	6	0	

The map has been created successfully.


-------------------------------------------------------------------------------------------------------------------------------



Enter your choice(0 to 2) : 
1. Create map by inserting locations.
2. Find the shortest distance uisng Dijkstra's Algorithm.

Enter 0 to end the application.
2


Dijkstra's Algorithm : 

Enter source landmark name : A

Enter source landmark number : 0

The visited distance and path status is : 
For landmark : A;  Visited : 1;  Path : 0;  Distance : 0
For landmark : B;  Visited : 0;  Path : 0;  Distance : 5
For landmark : C;  Visited : 0;  Path : 0;  Distance : 7

Selected landmark number is : 1
Minimum is : 5

The visited distance and path status is : 
For landmark : A;  Visited : 1;  Path : 0;  Distance : 0
For landmark : B;  Visited : 1;  Path : 0;  Distance : 5
For landmark : C;  Visited : 0;  Path : 0;  Distance : 7


The Shortest Path from Source to all destinations in terms of landmark name : 
Source name is : A

Destination Landmark name : B;   Distance : 5;   Path : B <- A
Destination Landmark name : C;   Distance : 7;   Path : C <- A


-------------------------------------------------------------------------------------------------------------------------------



Enter your choice(0 to 2) : 
1. Create map by inserting locations.
2. Find the shortest distance uisng Dijkstra's Algorithm.

Enter 0 to end the application.
0

Thank You !
You have ended the appliaction.

-------------------------------------------------------------------------------------------------------------------------------


@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@


//Test Case 2 : undirected graph , with no loop, parallel edges.


WELCOME TO THE PUNE CITY NAVIGATION APPLICATION !!!

Enter your choice(0 to 2) : 
1. Create map by inserting locations.
2. Find the shortest distance uisng Dijkstra's Algorithm.

Enter 0 to end the application.
1

Map Creation : 

Enter number of landmarks : 4

Enter number of paths : 6

Enter the details of landmarks : 

Enter the name of landmark : A
Enter the number of landmark : 0

Enter the name of landmark : B
Enter the number of landmark : 1

Enter the name of landmark : C
Enter the number of landmark : 2

Enter the name of landmark : D
Enter the number of landmark : 3

Enter the details of paths : 
Enter source landmark number,destination landmark number and path distance between them : 0 1 3
Enter source landmark number,destination landmark number and path distance between them : 0 2 45
Enter source landmark number,destination landmark number and path distance between them : 0 3 987
Enter source landmark number,destination landmark number and path distance between them : 1 2 1
Enter source landmark number,destination landmark number and path distance between them : 1 3 3
Enter source landmark number,destination landmark number and path distance between them : 2 3 1

Matrix of distances is as follows :

		A	B	C	D	

	A	0	3	45	987	
	B	0	0	1	3	
	C	0	0	0	1	
	D	0	0	0	0	

The map has been created successfully.


-------------------------------------------------------------------------------------------------------------------------------



Enter your choice(0 to 2) : 
1. Create map by inserting locations.
2. Find the shortest distance uisng Dijkstra's Algorithm.

Enter 0 to end the application.
2


Dijkstra's Algorithm : 

Enter source landmark name : A

Enter source landmark number : 0

The visited distance and path status is : 
For landmark : A;  Visited : 1;  Path : 0;  Distance : 0
For landmark : B;  Visited : 0;  Path : 0;  Distance : 3
For landmark : C;  Visited : 0;  Path : 0;  Distance : 45
For landmark : D;  Visited : 0;  Path : 0;  Distance : 987

Selected landmark number is : 1
Minimum is : 3

The visited distance and path status is : 
For landmark : A;  Visited : 1;  Path : 0;  Distance : 0
For landmark : B;  Visited : 1;  Path : 0;  Distance : 3
For landmark : C;  Visited : 0;  Path : 1;  Distance : 4
For landmark : D;  Visited : 0;  Path : 1;  Distance : 6

Selected landmark number is : 2
Minimum is : 4

The visited distance and path status is : 
For landmark : A;  Visited : 1;  Path : 0;  Distance : 0
For landmark : B;  Visited : 1;  Path : 0;  Distance : 3
For landmark : C;  Visited : 1;  Path : 1;  Distance : 4
For landmark : D;  Visited : 0;  Path : 2;  Distance : 5


The Shortest Path from Source to all destinations in terms of landmark name : 
Source name is : A

Destination Landmark name : B;   Distance : 3;   Path : B <- A
Destination Landmark name : C;   Distance : 4;   Path : C <- B <- A
Destination Landmark name : D;   Distance : 5;   Path : D <- C <- B <- A


-------------------------------------------------------------------------------------------------------------------------------



Enter your choice(0 to 2) : 
1. Create map by inserting locations.
2. Find the shortest distance uisng Dijkstra's Algorithm.

Enter 0 to end the application.
0

Thank You !
You have ended the appliaction.

-------------------------------------------------------------------------------------------------------------------------------